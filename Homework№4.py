from sys import argv
from functools import reduce
from itertools import count, cycle

# 1. Реализовать скрипт, в котором должна быть предусмотрена функция расчета заработной платы сотрудника.
# В расчете необходимо использовать формулу: (выработка в часах * ставка в час) + премия. Для выполнения расчета для конкретных значений необходимо запускать скрипт с параметрами.

hours, paid_for_hour, bonus = argv[1:]
result = int(hours) * int(paid_for_hour) + int(bonus)
print(result)

# 2. Представлен список чисел. Необходимо вывести элементы исходного списка, значения которых больше предыдущего элемента.

base_list = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
result = [base_list[i] for i in range(1, len(base_list)) if base_list[i] > base_list[i - 1]]
print(result)

# 3. Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21. Необходимо решить задание в одну строку.

result = [el for el in range(20, 241) if el % 20 == 0 or el % 21 == 0]
print(result)

# 4. Представлен список чисел. Определить элементы списка, не имеющие повторений. Сформировать итоговый массив чисел, соответствующих требованию.
# Элементы вывести в порядке их следования в исходном списке. Для выполнения задания обязательно использовать генератор.

base_list = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
base_list = [el for el in base_list if base_list.count(el) == 1]
print(base_list)

# 5. Реализовать формирование списка, используя функцию range() и возможности генератора. В список должны войти четные числа от 100 до 1000 (включая границы).
# Необходимо получить результат вычисления произведения всех элементов списка.

list = [el for el in range(100, 1001) if el % 2 == 0]
print(reduce(lambda x, y: x * y, list))

# 6. Реализовать два небольших скрипта:
# а) итератор, генерирующий целые числа, начиная с указанного,
start = int(input('С какого числа начать? '))
end = int(input('На каком числе закончить? '))
for el in count(start):
    if el > end:
        break
    else:
        print(el)

# б) итератор, повторяющий элементы некоторого списка, определенного заранее.
start = input('Введите последовательность для повторения: ')
end = int(input('На каком повторении закончить? '))
i = 1
for el in cycle(start):
    if i > end:
        break
    print(el)
    i += 1


# 7. Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение. При вызове функции должен создаваться объект-генератор.
# Функция должна вызываться следующим образом: for el in fact(n). Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые n чисел,
# начиная с 1! и до n!.

def fact(n):
    result = 1
    for el in range(1, n + 1):
        result *= el
        yield result


n = int(input('Факториал числа: '))
for el in fact(n):
    print(el)
